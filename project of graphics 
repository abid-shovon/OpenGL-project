#include <GL/glut.h>
#include <iostream>
#include <cmath>

// Window dimensions
const int WIDTH = 800;
const int HEIGHT = 600;

// Animation parameters
float cyclePosition = -0.8f;
float cycleSpeed = 0.005f;

void drawCycle() {
    // Draw cycle body
    glColor3f(0.0f, 0.0f, 0.0f);
    glBegin(GL_POLYGON);
    glVertex2f(cyclePosition, -0.6f);
    glVertex2f(cyclePosition + 0.1f, -0.6f);
    glVertex2f(cyclePosition + 0.1f, -0.4f);
    glVertex2f(cyclePosition, -0.4f);
    glEnd();

    // Draw cycle wheels
    glColor3f(0.0f, 0.0f, 0.0f);
    glBegin(GL_TRIANGLE_FAN);
    float wheelCenterX1 = cyclePosition + 0.025f;
    float wheelCenterX2 = cyclePosition + 0.075f;
    float wheelCenterY = -0.6f;
    glVertex2f(wheelCenterX1, wheelCenterY);
    for (int i = 0; i <= 360; i += 5) {
        float angle = i * M_PI / 180;
        glVertex2f(wheelCenterX1 + 0.05f * cos(angle), wheelCenterY + 0.05f * sin(angle));
    }
    glEnd();

    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(wheelCenterX2, wheelCenterY);
    for (int i = 0; i <= 360; i += 5) {
        float angle = i * M_PI / 180;
        glVertex2f(wheelCenterX2 + 0.05f * cos(angle), wheelCenterY + 0.05f * sin(angle));
    }
    glEnd();
}

void drawRoad() {
    // Draw road
    glColor3f(0.2f, 0.2f, 0.2f);
    glBegin(GL_POLYGON);
    glVertex2f(-1.0f, -0.5f);
    glVertex2f(-1.0f, -1.0f);
    glVertex2f(1.0f, -1.0f);
    glVertex2f(1.0f, -0.5f);
    glEnd();
}

void drawRiver() {
    // Draw river
    glColor3f(0.0f, 0.5f, 1.0f);
    glBegin(GL_POLYGON);
    glVertex2f(-1.0f, -0.5f);
    glVertex2f(-1.0f, 0.0f);
    glVertex2f(1.0f, 0.0f);
    glVertex2f(1.0f, -0.5f);
    glEnd();
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glLoadIdentity();

    drawRoad();
    drawRiver();
    drawCycle();

    glutSwapBuffers();
}

void update(int value) {
    // Move the cycle along the road
    cyclePosition += cycleSpeed;
    if (cyclePosition > 1.0f) {
        cyclePosition = -1.5f;
    }

    glutPostRedisplay();
    glutTimerFunc(16, update, 0);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    glutInitWindowSize(WIDTH, HEIGHT);
    glutCreateWindow("Cycle Ride Beside the River");

    glClearColor(1.0f, 1.0f, 1.0f, 1.0f);

    gluOrtho2D(-1.0f, 1.0f, -1.0f, 1.0f);

    glutDisplayFunc(display);
    glutTimerFunc(0, update, 0);

    glutMainLoop();

    return 0;
}